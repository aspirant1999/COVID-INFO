{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","recoverd","dead","url","fetchData","country","a","changeurl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Countrypicker","handle","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","alt","width","CountryPicker","copy","href","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e37e7f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2OXhA\",\"card\":\"Cards_card__3Alo5\",\"infected\":\"Cards_infected__1TOrY\",\"recoverd\":\"Cards_recoverd__3oPmE\",\"dead\":\"Cards_dead__1biUy\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards = ({data: {confirmed,recovered,deaths, lastUpdate }}) => {\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n     return(\r\n         <div className={StylesProvider.container}>\r\n             <Grid container justify=\"center\">\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                            <Typography variant=\"h5\"><CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            /> </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.recoverd)}>\r\n                    <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                            <Typography variant=\"h5\"><CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            /> </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.dead)}>\r\n                    <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                            <Typography variant=\"h5\"><CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            /> </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n             </Grid>\r\n\r\n         </div>\r\n     )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeurl =url;\r\n\r\n    if (country){\r\n        changeurl =`${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeurl);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async( ) => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect } from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({data:{confirmed,recovered, deaths} , country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n  \r\n\r\n const lineChart = (\r\n     dailyData.length\r\n     ? (\r\n        <Line\r\n         data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n            },{\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'red',\r\n                fill: true,\r\n            }],\r\n         }}\r\n         />\r\n     ): null\r\n );\r\n\r\n\r\n const barChart = (\r\n    confirmed\r\n     ?(\r\n         <Bar\r\n         data={{\r\n            labels: ['Infected','Recovered','Deaths'],\r\n            datasets: [{\r\n                label: 'people',\r\n                backgroundColor:['blue','green','red'],\r\n                data:[\r\n                    confirmed.value, recovered.value, deaths.value\r\n                ]\r\n            }]\r\n\r\n         }}\r\n         options={{\r\n             legend: {display:false},\r\n             title: {display:true, text:`Current state in ${country}`}\r\n         }}\r\n         />\r\n     ):null\r\n )\r\n     return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n     )\r\n}\r\nexport default Charts;","import React, { useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl, StylesProvider } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\n\r\n\r\n\r\nconst Countrypicker = ({handle}) => {\r\n\r\n        const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n    \r\n        fetchAPI();\r\n    \r\n    },[setFetchedCountries]);\r\n\r\n\r\n     return(\r\n         <div className={styles.container}>\r\n         <FormControl className={StylesProvider.formControl}>\r\n             <NativeSelect defaultValue=\"\" onChange={(e) => handle(e.target.value)}>\r\n                 <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key= {i} value= {country}>{country}</option>)}\r\n             </NativeSelect>\r\n         </FormControl>\r\n         </div>\r\n     )\r\n}\r\nexport default Countrypicker;","import React from 'react';\r\n\r\nimport {Cards, Charts, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData});\r\n       console.log(fetchedData);\r\n     }\r\n\r\n    \r\n     handle = async (country) => {\r\n        const fetchedData = await fetchData(country); \r\n        this.setState({ data: fetchedData, country: country});   \r\n     }\r\n    render() {\r\n        const { data, country }= this.state;\r\n\r\n        return (\r\n            \r\n            <div className={styles.container}>\r\n                <h1 className={styles.title}><img src=\"logo.png\" alt=\"\" width=\"60px\"/>COVID-INFO</h1>\r\n               <Cards data= {data} />\r\n               <CountryPicker handle={this.handle}/>\r\n               <Charts data={data} country={country}/>\r\n\r\n                <div className={styles.copy}>\t&copy;2020 : &nbsp; <a href=\"https://adarshspakkala.me/\">Adarsh S Pakkala</a></div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1sOMD\",\"copy\":\"App_copy__32QpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__7dudC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2vEcI\"};"],"sourceRoot":""}